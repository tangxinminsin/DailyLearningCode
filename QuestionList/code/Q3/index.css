body,
html {
  padding: 0;
  margin: 0;
}

/* 方法一 flex*/
.box1 {
  /* 行内元素与块状元素均可 */
  display: flex;
  height: 200px;
  /* 在这个高度中垂直居中 */
  background: #03a9f4;
  margin-bottom: 10px;
}

.item1 {
  width: 100px;
  height: 100px;
  background: yellow;
  margin: auto;
}

.inline {
  margin: auto;
}

/* 方法二 flex*/
.box2 {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 200px;
  background: #03a9f4;
  margin-bottom: 10px;
}

.item2 {
  width: 100px;
  height: 100px;
  background: yellow;
}

/*  方法三 绝对定位  元素宽高未知可使用*/
.box3 {
  height: 200px;
  background: #03a9f4;
  margin-bottom: 10px;
  position: relative;
}

.item3 {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100px;
  height: 100px;
  background: yellow;
}

/*  方法四 绝对定位  元素宽高未知可使用*/
.box4 {
  height: 200px;
  background: #03a9f4;
  margin-bottom: 10px;
  position: relative;
}

.item4 {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  width: 100px;
  height: 100px;
  background: yellow;
}

/*方法五 gird 布局 */
.box5 {
  display: grid;
  justify-content: center;
  align-content: center;
  grid-template-columns: 100px 100px 100px;
  grid-template-rows: 100px 100px 100px;
  height: 400px;
  background: #03a9f4;
  margin-bottom: 10px;
}

.item5 {
  width: 100px;
  height: 100px;
  background: yellow;
}

/* 方法六 定位 */
/* 将元素绝对定位为top: 50%; left: 50%;后，可以使用值为宽的一半和高的一半的负margin实现垂直水平居中。 */
.box6 {
  position: relative;
  height: 300px;
  background: #03a9f4;
  margin-bottom: 10px;
}

.item6 {
  width: 100px;
  height: 100px;
  background: yellow;
  position: absolute;
  top: 50%;
  left: 50%;
  margin: -50px 0 0 -50px;
}